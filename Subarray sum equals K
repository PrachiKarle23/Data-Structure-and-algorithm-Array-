class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        vector<int>ans;
        int n=nums.size(),cnt=0;
        for(int i=0;i<n;i++)
        {
           int sum=0;
           for(int j=i;j<n;j++)
           {
             sum+=nums[j];
             if(sum==k){
                cnt++;
             }
           }
        }
        return cnt;
    }
};


class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        unordered_map<int,int>mp;
        int sum=0,ans=0;
        mp[sum]=1;
        for(auto it:nums)
        {
            sum+=it;
            int key=sum-k;
            if(mp.find(key)!=mp.end())
            {
                ans+=mp[key];
            }
            mp[sum]++;
        }
        return ans;
    }
};
