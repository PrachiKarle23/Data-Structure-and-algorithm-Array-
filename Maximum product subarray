class Solution {
public:
    int maxProduct(vector<int>& nums) {
       int n=nums.size();
       if(n==0){
           return 0;
       }
       int currmax=nums[0];
       int currmin=nums[0];
       int maxprod=nums[0];

       for(int i=1;i<n;i++)
       {
            if(nums[i]<0)
            {
               swap(currmax, currmin);
            }

           currmax=max(nums[i], currmax*nums[i]);
           currmin=min(nums[i], currmin*nums[i]);

           maxprod=max(maxprod, currmax);
       }
       return maxprod;
    }
};

//Approach 2
class Solution{
public:

	long long maxProduct(vector<int> arr, int n) {
	    long long result = INT_MIN;
	    
        for(int i=0;i<n;i++){
            for(int j=i;j<n;j++){
                long long Prod=1;
                for(int k=i;k<=j;k++){
                    Prod*=arr[k];
                }
                
                result=max(result,Prod);
            }
        }
        return result;
	}
};
